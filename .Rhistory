install.packages("fable")
library(fable)
?fable
library(tibble)
library(tsibble)
library(dplyr)
config <- read.csv('config.txt')
rm(list=ls())
setwd("/Volumes/GoogleDrive/Mit drev/Matematisk modellering/9. semester/Adv. Time Series/exercises/02427-wind-power-forecast")
source('functions/plotting/diagnostic_plots.R')
library(fable)
library(tsibble)
library(dplyr)
config <- read.csv('config.txt')
data <- read.csv('data/data/cex4WindDataInterpolated12Hours.csv')
View(data)
library(tidyverse)
install.packages("tidyverse")
library(fable)
library(tidyverse)
library(tsibble)
library(dplyr)
data <- read.csv('data/data/cex4WindDataInterpolated12Hours.csv')
tsibble(data)
as_tsibble(data, index = )
as_tsibble(data)
as_tsibble(data, index = t)
View(data)
as_tsibble(data, index = toy)
duplicates(data$toy)
data$toy
data$toy[1000:2000]
data$toy[2000:3000]
data$toy[3000:4000]
data$toy[10000:11000]
data['t']
time_train <- as.character(data[['t']])
time_train <- as.POSIXct(time_train, format = "%Y-%m-%d %H:%M:%S", tz="GMT")
year(time_train)
library(lubridate)
mutate(data, date = ymd(t), day = day(date),
month = month(date), year = year(date))
ymd(time_train)
time_train
extractdate <- function(date) {
day <- format(date, format="%d")
month <- format(date, format="%m")
year <- format(date, format="%Y")
cbind(day, month, year)
}
extractdate(time_train)
year <- format(time_train, format="%Y")
year
year <- as.numeric(format(time_train, format="%Y"))
year
data[['toy']] <- year + data[['toy']]
data[['toy']]
data <- read.csv('data/data/cex4WindDataInterpolated12Hours.csv')
time_train <- as.character(train[['t']])
time_train <- as.POSIXct(time_train, format = "%Y-%m-%d %H:%M:%S", tz="GMT")
year <- as.numeric(format(time_train, format="%Y"))
data <- read.csv('data/data/cex4WindDataInterpolated12Hours.csv')
time_train <- as.character(data[['t']])
time_train <- as.POSIXct(time_train, format = "%Y-%m-%d %H:%M:%S", tz="GMT")
year <- as.numeric(format(time_train, format="%Y"))
data[['toy']]
max(data[['toy']])
data[['toy']] <- year + data[['toy']]/366
data[['toy']]
as_tsibble(data, index = toy)
data.tibble = as_tsibble(data, index = toy)
install.packages('thief')
library(thief)
library(xts)
library(thief)
names <- c('p', 'Ws1', 'Ws2', 'Ws3', 'Ws4', 'Ws5', 'Ws6', 'Ws7', 'Ws8',
'Ws9', 'Ws10', 'Ws11', 'Ws12')
train.xts <- na.omit(xts(x = data[names], order.by = time_train))
tsaggregates(train.xts$p)
train.xts$p
frequency(train.xts)
train.xts <- xts(x = data[names], order.by = time_train)
tsaggregates(train.xts$p)
tsaggregates(train.xts$p, frequency = 0.0002777778)
tsaggregates(train.xts$p, m = 0.0002777778)
length(train.xts$p)
?aggregate
?msts
train.xts <- msts(x = data$p, seasonal.periods = c(1, 3, 6, 12))
train.xts <- msts(data = data$p, seasonal.periods = c(1, 3, 6, 12))
train.xts
tsaggregates(train.xts$p)
tsaggregates(train.xts)
agg <- tsaggregates(train.xts)
View(agg)
which(is.na(agg$Monthly))
data.tibble = as.tsbibble(agg)
data.tibble = as.tsibble(agg)
data.tibble = as_tsibble(agg)
agg$`2-Monthly`
length(agg$`2-Monthly`)
length(agg$Monthly)
length(agg$Quarterly)
37932/3
length(agg$Biannual)
length(agg$Annual)
plot(agg$Annual)
plot(agg$Biannual)
plot(agg$Annual)
plot(agg$Annual[0:100])
plot(agg$Annual[0:100], type ='l')
fit_biannual <- arima(agg$Biannual, order = c(1,0,0))
fit_biannual
acf(agg$Biannual)
acf(agg$Biannual, na.action = na.omit)
acf(na.omit(agg$Biannual), na.action = na.omit)
?acf
acf(agg$Biannual, na.action = na.pass)
pacf(agg$Biannual, na.action = na.pass)
fit_biannual <- arima(agg$Biannual, order = c(2,1,0))
fit_biannual
plot(diff(agg$Biannual))
fit_biannual <- auto.arima(agg$Biannual)
fit_biannual
acf(fit_biannual$residuals, na.action = na.pass)
pacf(fit_biannual$residuals, na.action = na.pass)
fit_biannual <- auto.arima(diff(agg$Biannual))
fit_biannual
pacf(fit_biannual$residuals, na.action = na.pass)
acf(fit_biannual$residuals, na.action = na.pass)
pacf(fit_biannual$residuals, na.action = na.pass)
fit_biannual <- auto.arima(agg$Biannual)
pacf(fit_biannual$residuals, na.action = na.pass)
acf(fit_biannual$residuals, na.action = na.pass)
plot(agg$Quarterly)
plot(diff(agg$Quarterly))
plot(agg$Quarterly)
fit_biannual <- auto.arima(agg$Quarterly)
acf(fit_biannual$residuals, na.action = na.pass)
pacf(fit_biannual$residuals, na.action = na.pass)
fit_biannual
fit_biannual <- auto.arima(agg$Monthly)
fit_biannual
ftbats <- function(y,h,...){forecast(tbats(y),h,...)}
z <- thief(train.xts, forecastfunction=ftbats)
z
z <- thief(train.xts, usemodel = 'arima')
z
plot(z)
z$x
z$method
z$residuals
length(z)
length(z$residuals)
length(train.xts)
length(data$p)
dim(z)
dim(z$residuals)
dim(z$residuals[,1])
dim(z$residuals[1,])
View(z$residuals)
plot(z$residuals)
mean(z$residuals^2)
mean(z$residuals^2, na.rm = TRUE)
z$fitted
z$fitted['Jan']
View(z$fitted)
train.xts <- msts(data = data$p, seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
dim(agg)
View(agg)
View(z)
seq_along(agg)
frequency(agg[[1]])
frequency(agg[[2]])
frequency(agg[[3]])
frequency(agg[[4]])
frequency(agg[[5]])
frequency(agg[[6]])
fc <- list()
for(i in seq_along(agg))
fc[[i]] <- forecast(auto.arima(agg[[i]]), h=2*frequency(agg[[i]]))
train.xts[25000::]
agg <- tsaggregates(train.xts[25000:nrow])
(train.xts)
agg <- tsaggregates(train.xts[25000:nrow(train.xts)])
agg <- tsaggregates(train.xts[25000:length(train.xts)])
agg
fc <- list()
for(i in seq_along(agg))
fc[[i]] <- forecast(auto.arima(agg[[i]]), h=2*frequency(agg[[i]]))
View(fc)
seq_along(agg)
agg <- tsaggregates(train.xts[25000:length(train.xts)])
agg$`Period 1`
train.xts <- msts(data = data$p[25000:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg
seq_along(agg)
agg[[1]]
agg <- agg[c(1, 3, 5, 6)]
seq_along(agg)
# Compute forecasts
fc <- list()
for(i in seq_along(agg))
fc[[i]] <- forecast(auto.arima(agg[[i]]), h=2*frequency(agg[[i]]))
train.xts <- msts(data = data$p[30000:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
length(train.xts)
agg <- tsaggregates(train.xts)
agg$Annual
length(agg$Annual)
length(agg$Biannual)
length(agg$Monthly)
agg <- agg[c(1, 3, 5, 6)]
# Compute forecasts
fc <- list()
for(i in seq_along(agg))
fc[[i]] <- forecast(auto.arima(agg[[i]]), h=2*frequency(agg[[i]]))
View(fc)
length(fc)
fc[1]
length(fc[[1]])
fc[[1]]$fitted
length(fc[[1]]$fitted)
length(train.xts)
fc[[1]]$mean
View(fc)
fc[[1]][["level"]]
fc[[1]]$fitted
length(fc1[['fitted']])
length(fc[[1]][['fitted']])
View(fc)
View(fc[[1]])
train.xts <- msts(data = data$p[30000:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
fit_biannual <- auto.arima(agg$Annual)
fit_biannual
train.xts <- msts(data = data$p[30001:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
fit_biannual <- auto.arima(agg$Annual)
fit_biannual
train.xts <- msts(data = data$p[3006:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
fit_biannual <- auto.arima(agg$Annual)
fit_biannual
fit_biannual <- arima(agg$Annual, order = (2,0,1))
fit_biannual <- arima(agg$Annual, order = c(2,0,1))
fit_biannual
fit_biannual <- arima(agg$Annual, order = c(1,0,0))
fit_biannual
fit_biannual <- arima(agg$Annual, order = c(2,0,0))
fit_biannual
train.xts <- msts(data = data$p[3000:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
fit_biannual <- arima(agg$Annual, order = c(2,0,0))
fit_biannual
train.xts <- msts(data = data$p[3000:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
fit_biannual <- arima(agg$Annual, order = c(2,0,0))
fit_biannual
train.xts <- msts(data = data$p[3000:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
length(agg$Monthly)
train.xts <- msts(data = data$p[30010:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
length(agg$Monthly)
train.xts <- msts(data = data$p[30000:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
length(agg$Monthly)
agg$Quarterly
agg$Quarterly[0:10]
train.xts <- msts(data = data$p[30010:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
agg$Quarterly[0:10]
fit_biannual <- arima(agg$Annual, order = c(2,0,0))
fit_biannual
train.xts <- msts(data = data$p[30000:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
fit_biannual <- arima(agg$Annual, order = c(2,0,0))
fit_biannual
fit_biannual$n.cond
fit_biannual$nobs
train.xts <- msts(data = data$p[30010:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
fit_biannual <- arima(agg$Annual, order = c(2,0,0))
fit_biannual$nobs
length(agg$Annual)
train.xts <- msts(data = data$p[30000:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
length(agg$Annual)
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
fit_biannual <- arima(agg$Annual, order = c(2,0,0))
fit_biannual
train.xts <- msts(data = data$p[30010:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
fit_biannual <- arima(agg$Annual, order = c(2,0,0))
fit_biannual
train.xts <- msts(data = data$p[30005:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
fit_biannual <- arima(agg$Annual, order = c(2,0,0))
fit_biannual
train.xts <- msts(data = data$p[30005:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
pacf(agg$Biannual, na.action = na.pass)
fit_biannual <- arima(agg$Annual, order = c(2,0,0))
fit_biannual
train.xts <- msts(data = data$p[30002:length(data$p)], seasonal.periods = c(1, 3, 6, 12))
agg <- tsaggregates(train.xts)
agg <- agg[c(1, 3, 5, 6)]
pacf(agg$Biannual, na.action = na.pass)
fit_biannual <- arima(agg$Annual, order = c(2,0,0))
fit_biannual
data <- read.csv('data/data/cex4WindDataInterpolated12Hours.csv')
time_train <- as.character(data[['t']])
time_train <- as.POSIXct(time_train, format = "%Y-%m-%d %H:%M:%S", tz="GMT")
names <- c('p', 'Ws1', 'Ws2', 'Ws3', 'Ws4', 'Ws5', 'Ws6', 'Ws7', 'Ws8',
'Ws9', 'Ws10', 'Ws11', 'Ws12')
train <- data[, names]
val <- data[(length(data[['p']])-config$N_valid-1):length(data[['p']]),names]
train.xts <- msts(data = train, seasonal.periods = c(1, 3, 6, 12))
#hourly forecasts
hourly.fit <- (arima(train.xts['p'], order = c(2,0,2), xreg = train.xts[c('Ws1')]))
#hourly forecasts
hourly.fit <- (arima(train.xts['p'], order = c(2,0,2), xreg = train.xts['Ws1']))
train.xts['Ws1']
train.xts <- msts(data = train, seasonal.periods = c(1, 3, 6, 12))
train.xts
#hourly forecasts
hourly.fit <- (arima(train.xts$p, order = c(2,0,2), xreg = train.xts$Ws1))
train.xts$p
train.xts['p']
train.xts[['p']]
#hourly forecasts
hourly.fit <- (arima(train$p, order = c(2,0,2), xreg = train$Ws1))
hourly.fit
#hourly forecasts
hourly.fit <- (auto.arima(train$p, xreg = train$Ws1))
train <- data[1:config$N_train, names]
#hourly forecasts
hourly.fit <- (auto.arima(train$p, xreg = train$Ws1))
hourly.fit
#hourly forecasts
hourly.fit <- arima(train$p, order = c(2,0,2), xreg = train$Ws1)
hourly.fit
#hourly forecasts
hourly.fit <- arima(train$p, order = c(1,0,1), xreg = train$Ws1)
hourly.fit
acf(hourly.fit$residuals, na.action = na.pass)
pacf(hourly.fit$residuals, na.action = na.pass)
#hourly forecasts
hourly.fit <- arima(train$p, order = c(2,0,1), xreg = train$Ws1)
acf(hourly.fit$residuals, na.action = na.pass)
pacf(hourly.fit$residuals, na.action = na.pass)
acf(hourly.fit$residuals, na.action = na.pass)
#hourly forecasts
hourly.fit <- arima(train$p, order = c(2,0,2), xreg = train$Ws1)
acf(hourly.fit$residuals, na.action = na.pass)
pacf(hourly.fit$residuals, na.action = na.pass)
agg <- tsaggregates(train.xts)
agg3.fit <- auto.arima(agg$Quarterly)
agg3.fit
acf(agg3.fit$residuals, na.action = na.pass)
pacf(agg3.fit$residuals, na.action = na.pass)
agg3.fit <- arima(agg$Quarterly, order = c(2,0,0),
seasonal = list(order = c(1,0,0), period = 4))
agg3.fit
acf(agg3.fit$residuals, na.action = na.pass)
pacf(agg3.fit$residuals, na.action = na.pass)
acf(agg3.fit$residuals, na.action = na.pass)
agg3.fit <- arima(agg$Quarterly, order = c(2,0,2),
seasonal = list(order = c(1,0,0), period = 4))
acf(agg3.fit$residuals, na.action = na.pass)
pacf(agg3.fit$residuals, na.action = na.pass)
acf(agg3.fit$residuals, na.action = na.pass)
agg3.fit <- arima(agg$Quarterly, order = c(2,0,0),
seasonal = list(order = c(2,0,0), period = 4))
acf(agg3.fit$residuals, na.action = na.pass)
pacf(agg3.fit$residuals, na.action = na.pass)
agg3.fit <- arima(agg$Quarterly, order = c(2,1,0),
seasonal = list(order = c(2,0,0), period = 4))
acf(agg3.fit$residuals, na.action = na.pass)
pacf(agg3.fit$residuals, na.action = na.pass)
agg3.fit <- arima(agg$Quarterly, order = c(2,0,0),
seasonal = list(order = c(2,1,0), period = 4))
acf(agg3.fit$residuals, na.action = na.pass)
pacf(agg3.fit$residuals, na.action = na.pass)
acf(agg3.fit$residuals, na.action = na.pass)
agg3.fit <- arima(agg$Quarterly, order = c(2,0,0),
seasonal = list(order = c(2,0,0), period = 4))
agg3.fit <- auto.arima(agg$Quarterly)
agg6.fit <- auto.arima(agg$Biannual)
agg12.fit <- auto.arima(agg$Annual)
agg3.fit
acf(agg3.fit$residuals, na.action = na.pass)
pacf(agg3.fit$residuals, na.action = na.pass)
acf(agg6.fit$residuals, na.action = na.pass)
pacf(agg6.fit$residuals, na.action = na.pass)
agg6.fit
acf(agg12.fit$residuals, na.action = na.pass)
pacf(agg12.fit$residuals, na.action = na.pass)
agg12
agg12.fit
#hourly forecasts
hourly.fit <- arima(log(train$p), order = c(2,0,0), xreg = train$Ws1)
log(train$p)
?log
train$p
?tbats
agg3.fit <- tbats(agg$Quarterly)
agg3.fit
acf(agg3.fit$errors, na.action = na.pass)
pacf(agg3.fit$errors, na.action = na.pass)
#hourly forecasts
hourly.fit <- tbats(train$p, order = c(2,0,0), xreg = train$Ws1)
#hourly forecasts
hourly.fit <- tbats(train$p, xreg = train$Ws1)
hourly.fit
?tbats
#hourly forecasts
hourly.fit <- tbats(train$p)
hourly.fit
acf(hourly.fit$errors, na.action = na.pass)
pacf(hourly.fit$errors, na.action = na.pass)
mean(hourly.fit$erros^2, na.rm =TRUE)
mean(hourly.fit$errors^2, na.rm =TRUE)
hourly.fit <- arima(train$p, order = c(2,0,2), xreg = train$Ws1)
mean(hourly.fit$residuals^2, na.rm = TRUE)
hourly.fit <- auto.arima(train$p, order = c(2,0,2), xreg = train$Ws1)
hourly.fit <- auto.arima(train$p, xreg = train$Ws1)
mean(hourly.fit$residuals^2, na.rm=TRUE)
hourly.fit.ets <- ets(train$p)
hourly.fit.ets
acf(hourly.fit.ets, na.rm=TRUE)
acf(hourly.fit.ets$residuals, na.rm=TRUE)
pacf(hourly.fit.ets$residuals, na.rm=TRUE)
mean(hourly.fit.ets$residuals^2, na.rm =TRUE)
